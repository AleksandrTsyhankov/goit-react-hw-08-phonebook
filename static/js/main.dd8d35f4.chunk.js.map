{"version":3,"sources":["components/PrivateRoute.js","components/PublicRoute.js","components/Spinner.jsx","App.js","reportWebVitals.js","redux/phonebook/phonebook-reducer.js","redux/auth/auth-slice.js","redux/store.js","index.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-actions.js"],"names":["PrivateRoute","children","routeProps","isLoggedIn","useSelector","authSelecttors","getIsLoggedIn","to","PublicRoute","restricted","shouldRedirect","Spinner","type","color","height","width","timeout","PhonebookAppBar","lazy","PhonebookView","HomeView","RegisterView","LoginView","App","dispatch","useDispatch","authSelectors","useEffect","authOperations","fetchCurrentUser","fetchContacts","fallback","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","items","createReducer","fetchContactsSuccess","_","payload","addContactSuccess","state","deleteContactSuccess","filter","id","loading","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","error","filterContacts","combineReducers","authSlice","createSlice","name","initialState","user","email","token","extraReducers","register","fulfilled","action","logIn","logOut","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","phonebook","phonebookReducer","auth","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","thunk","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","axios","defaults","baseURL","headers","common","Authorization","createAsyncThunk","credentials","a","rejectWithValue","post","data","alert","message","thunkAPI","getState","persistedToken","console","log","get","operations","getUsername","addContact","number","contact","completed","catch","deleteContact","contactId","delete","createAction"],"mappings":"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","file":"static/js/main.dd8d35f4.chunk.js","sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport authSelecttors from '../redux/auth/auth-selectors';\r\n\r\n\r\n\r\nexport default function PrivateRoute({ children, ...routeProps }) {\r\n    const isLoggedIn = useSelector(authSelecttors.getIsLoggedIn);\r\n    return <Route {...routeProps}>{\r\n       isLoggedIn ? children : <Redirect to=\"/login\" />\r\n    }</Route>\r\n};","import { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport authSelecttors from '../redux/auth/auth-selectors';\r\n\r\n\r\nexport default function PublicRoute({\r\n    children,\r\n    restricted = false,\r\n    ...routeProps\r\n}) {\r\n    const isLoggedIn = useSelector(authSelecttors.getIsLoggedIn);\r\n    const shouldRedirect = isLoggedIn && restricted;\r\n    return <Route {...routeProps}>\r\n        {shouldRedirect ? <Redirect to=\"/phonebook\" /> : children}\r\n    </Route>\r\n};","import React from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default function Spinner() {\r\n\r\n    return (\r\n      <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000}\r\n        padding-top={0}\r\n        margin-top={0}\r\n      />\r\n    );\r\n}","import { useEffect, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\n// import { PublicRoute, PrivateRoute } from \"react-private-public-route\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport authOperations from './redux/auth/auth-operations';\nimport { fetchContacts } from './redux/phonebook/phonebook-operations';\nimport authSelectors from './redux/auth/auth-selectors';\nimport PrivateRoute from 'components/PrivateRoute';\nimport PublicRoute from 'components/PublicRoute';\nimport Spinner from './components/Spinner';\n\nconst PhonebookAppBar = lazy(() => import('./components/AppBar/AppBar'));\nconst PhonebookView = lazy(() => import('./views/PhonebookView'));\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isLoggedIn) { dispatch(fetchContacts()) }\n  }, [dispatch, isLoggedIn]);\n\n  \n  return (\n    <Suspense fallback={<Spinner />}>\n      <PhonebookAppBar />\n\n      <Switch>\n        <PublicRoute exact path=\"/\">\n          <HomeView/>\n        </PublicRoute>\n\n        <PrivateRoute path=\"/phonebook\">\n          <PhonebookView />\n        </PrivateRoute>\n\n\n\n        <PublicRoute path=\"/register\" restricted>\n          <RegisterView/>\n        </PublicRoute>\n\n        <PublicRoute path=\"/login\" restricted>\n          <LoginView/>\n        </PublicRoute>\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n\r\n    filterContacts\r\n} from './phonebook-actions';\r\n// import { fetchContacts } from './phonebook-operations';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nconst filter = createReducer('', {\r\n    [filterContacts]: (_, { payload }) => payload,\r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    loading,\r\n    error,\r\n    filter,\r\n});\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n};\r\n\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\nimport authReducer from './auth/auth-slice';\r\nimport {\r\n  persistStore,\r\n  persistReducer\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        phonebook: phonebookReducer,\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n    },\r\n    middleware: (getDefaultMiddleware) => [...getDefaultMiddleware({serializableCheck: false}), thunk],\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body: { name, email, password }\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nconst register = createAsyncThunk('auth/register', async (credentials, {rejectWithValue}) => {\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    alert('Введены некорректные данные')\r\n    return rejectWithValue(error.message);\r\n  }\r\n});\r\n\r\n/*\r\n * POST @ /users/login\r\n * body: { email, password }\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nconst logIn = createAsyncThunk('auth/login', async (credentials, {rejectWithValue}) => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    alert('Введены некорректные данные')\r\n    return rejectWithValue(error.message);\r\n  }\r\n});\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers: Authorization: Bearer token\r\n * После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nconst logOut = createAsyncThunk('auth/logout', async (_, {rejectWithValue}) => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n  } catch (error) {\r\n    return rejectWithValue(error.message);\r\n  }\r\n});\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      console.log('Токена нет, уходим из fetchCurrentUser');\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch (error) {\r\n      // TODO: Добавить обработку ошибки error.message\r\n    }\r\n  },\r\n);\r\n\r\nconst operations = {\r\n  register,\r\n  logOut,\r\n  logIn,\r\n  fetchCurrentUser,\r\n};\r\nexport default operations;","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUsername,\r\n};\r\nexport default authSelectors;","import axios from 'axios';\r\nimport {\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError\r\n} from './phonebook-actions';\r\n\r\n\r\n// GET @ /contacts\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n};\r\n\r\n// POST @ /tasks\r\nconst addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n    completed: false,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error.message)));\r\n};\r\n\r\n// DELETE @ /tasks/:id\r\nconst deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error.message)));\r\n};\r\n\r\nexport { fetchContacts, addContact, deleteContact };","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('Contacts/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('Contacts/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('Contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('Contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('Contacts/addContactsuccess');\r\nexport const addContactError = createAction('Contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('Contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('Contacts/deleteContactsuccess');\r\nexport const deleteContactError = createAction('Contacts/deleteContactError');\r\n\r\nexport const filterContacts = createAction('contacts/filter');"],"sourceRoot":""}
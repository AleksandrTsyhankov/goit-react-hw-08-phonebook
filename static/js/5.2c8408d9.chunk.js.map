{"version":3,"sources":["components/Contacts/ContactStyles.module.css","components/Filter/Filter.module.css","App.module.css","redux/phonebook/phonebook-selectors.js","components/Contacts/ContactForm.jsx","components/Contacts/ContactList.jsx","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","components/Filter/Filter.jsx","views/PhonebookView.jsx"],"names":["module","exports","getFilter","state","phonebook","filter","getFilteredContacts","createSelector","items","contacts","normalizedFilter","toLowerCase","name","includes","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","e","target","value","className","s","contactFormContainer","form","onSubmit","preventDefault","find","contact","alert","addContact","label","TextField","inputName","type","pattern","title","required","onChange","inputTel","Button","btn","variant","sx","mt","btnText","ContactList","getRandomValues","contactsList","map","contactsListItem","color","onClick","deleteContact","id","delBtn","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","TypeError","v4","options","buf","rnds","random","connect","filterContacts","idF","uuidv4","htmlFor","Phonebook"],"mappings":"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","file":"static/js/5.2c8408d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactFormContainer\":\"ContactStyles_contactFormContainer__1HijI\",\"form\":\"ContactStyles_form__3qanI\",\"label\":\"ContactStyles_label__2JCdg\",\"inputName\":\"ContactStyles_inputName__2fOcn\",\"inputTel\":\"ContactStyles_inputTel__3GmLX\",\"btn\":\"ContactStyles_btn__mLJfh\",\"btnText\":\"ContactStyles_btnText__1GQ_B\",\"delBtn\":\"ContactStyles_delBtn__3hxsL\",\"contactsList\":\"ContactStyles_contactsList__3neRS\",\"contactsListItem\":\"ContactStyles_contactsListItem__27IPg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3f8Z1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__24tWt\"};","import { createSelector } from \"reselect\";\r\n\r\nconst getContact = state => state.phonebook.items;\r\nconst getFilter = state => state.phonebook.filter;\r\nconst getFilteredContacts = createSelector([getContact, getFilter], ((contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\r\n})) \r\n\r\nexport {\r\n    getContact,\r\n    getFilter,\r\n    getFilteredContacts,\r\n};","import React, { useState } from 'react';\r\nimport s from './ContactStyles.module.css';\r\nimport { addContact } from '../../redux/phonebook/phonebook-operations';\r\nimport { getFilteredContacts } from '../../redux/phonebook/phonebook-selectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nfunction ContactForm() {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(getFilteredContacts);\r\n\r\n    const clearState = () => {\r\n        setName('');\r\n        setNumber('');\r\n\r\n        return;\r\n    }\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            \r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            \r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n     const handleSubmitForm = e => {\r\n         e.preventDefault();\r\n\r\n         const availableContact = contacts.find(contact =>  contact.name.toLowerCase() === name.toLowerCase())\r\n\r\n            if (availableContact) {\r\n                alert(`${contacts.name} is already in contacts.`);\r\n                return;\r\n         };\r\n         \r\n        dispatch(addContact(name, number));\r\n        clearState();\r\n    }\r\n\r\n\r\nreturn ( \r\n<div className={s.contactFormContainer}>\r\n            <form className={s.form} onSubmit={handleSubmitForm}>\r\n                <label className={s.label} >Name</label>\r\n                    <TextField\r\n                    className={s.inputName}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    onChange={handleChange}\r\n                    value={name}\r\n                    />\r\n\r\n                    <label className={s.label} >Number</label>\r\n                    <TextField\r\n                    className={s.inputTel}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    onChange={handleChange}\r\n                    value={number}\r\n                />\r\n\r\n                <Button\r\n                    className={s.btn}\r\n                    type=\"submit\"\r\n                variant=\"contained\"\r\n                sx={{ mt: \"10px\" }}\r\n                >\r\n                   <span className={s.btnText}>Add contact</span> \r\n                </Button>\r\n                </form>\r\n</div>\r\n        );\r\n};\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport s from './ContactStyles.module.css';\r\nimport { deleteContact } from '../../redux/phonebook/phonebook-operations';\r\nimport { getFilteredContacts } from '../../redux/phonebook/phonebook-selectors';\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\nfunction ContactList() {\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(getFilteredContacts);\r\n\r\n    \r\n        return (\r\n            <>\r\n                <ul className={s.contactsList}>\r\n                    {contacts.map(contact => (\r\n                        <li\r\n                            key={contact.id}\r\n                            className={s.contactsListItem}\r\n                        > {contact.name}: {contact.number}\r\n\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"error\"\r\n                                onClick={() => dispatch(deleteContact(contact.id))}\r\n                                className={s.delBtn}\r\n                            >-</Button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </>\r\n        );\r\n};\r\n\r\nexport default ContactList;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React from 'react';\r\nimport s from './Filter.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux'\r\nimport { filterContacts } from '../../redux/phonebook/phonebook-actions';\r\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nfunction Filter ({ onChange, value }) {\r\n    const idF = uuidv4();\r\n\r\n        return (\r\n            <>\r\n                <label\r\n                    htmlFor={idF}\r\n                    className={s.filter}\r\n                >Find contacts by name\r\n                </label>\r\n                <TextField\r\n                    id={idF}\r\n                    // className={s.filterInput}\r\n                    type='text'\r\n                    name='filter'\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n             </>\r\n        );\r\n};\r\n    \r\nconst mapStateToProps = state => ({\r\n  contacts: getFilter(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: e => dispatch(filterContacts(e.target.value))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import ContactForm from '../components/Contacts/ContactForm';\r\nimport ContactList from '../components/Contacts/ContactList';\r\nimport Filter from '../components/Filter/Filter';\r\nimport s from '../App.module.css';\r\n\r\n\r\nfunction Phonebook() {\r\n  \r\n  return (\r\n      <>\r\n        <h1 className={s.title}>Phonebook</h1>\r\n        <ContactForm />\r\n        \r\n        <h2 className={s.title}>Contacts</h2>\r\n        <Filter/>\r\n        \r\n        <ContactList />\r\n      </>\r\n    )\r\n};\r\n\r\nexport default Phonebook;"],"sourceRoot":""}